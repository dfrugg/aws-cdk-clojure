(ns cdk.api.services.applicationautoscaling-test
  "Functions that represent AWS CDK enums and builders in the software.amazon.awscdk.services.applicationautoscaling package. "
  (:require [clojure.test :refer [deftest
                                  is
                                  testing]]
            [cdk.api.services.applicationautoscaling :refer [adjustment-type
                                                             metric-aggregation-type
                                                             predefined-metric
                                                             service-namespace]])
  (:import [software.amazon.awscdk.services.applicationautoscaling AdjustmentType
                                                                   MetricAggregationType
                                                                   PredefinedMetric
                                                                   ServiceNamespace]))


(deftest adjustment-type-test
  (testing "Testing enum function adjustment-type"
    (is (= AdjustmentType/EXACT_CAPACITY (adjustment-type {:item AdjustmentType/EXACT_CAPACITY} "test" :item)))
    (is (= AdjustmentType/EXACT_CAPACITY (adjustment-type {:test/item AdjustmentType/EXACT_CAPACITY} "test" :item)))
    (is (= AdjustmentType/PERCENT_CHANGE_IN_CAPACITY (adjustment-type {:item AdjustmentType/PERCENT_CHANGE_IN_CAPACITY} "test" :item)))
    (is (= AdjustmentType/PERCENT_CHANGE_IN_CAPACITY (adjustment-type {:test/item AdjustmentType/PERCENT_CHANGE_IN_CAPACITY} "test" :item)))
    (is (= AdjustmentType/CHANGE_IN_CAPACITY (adjustment-type {:item AdjustmentType/CHANGE_IN_CAPACITY} "test" :item)))
    (is (= AdjustmentType/CHANGE_IN_CAPACITY (adjustment-type {:test/item AdjustmentType/CHANGE_IN_CAPACITY} "test" :item)))
    (is (= AdjustmentType/EXACT_CAPACITY (adjustment-type {:item :exact-capacity} "test" :item)))
    (is (= AdjustmentType/EXACT_CAPACITY (adjustment-type {:test/item :exact-capacity} "test" :item)))
    (is (= AdjustmentType/PERCENT_CHANGE_IN_CAPACITY (adjustment-type {:item :percent-change-in-capacity} "test" :item)))
    (is (= AdjustmentType/PERCENT_CHANGE_IN_CAPACITY (adjustment-type {:test/item :percent-change-in-capacity} "test" :item)))
    (is (= AdjustmentType/CHANGE_IN_CAPACITY (adjustment-type {:item :change-in-capacity} "test" :item)))
    (is (= AdjustmentType/CHANGE_IN_CAPACITY (adjustment-type {:test/item :change-in-capacity} "test" :item)))))


(deftest metric-aggregation-type-test
  (testing "Testing enum function metric-aggregation-type"
    (is (= MetricAggregationType/MAXIMUM (metric-aggregation-type {:item MetricAggregationType/MAXIMUM} "test" :item)))
    (is (= MetricAggregationType/MAXIMUM (metric-aggregation-type {:test/item MetricAggregationType/MAXIMUM} "test" :item)))
    (is (= MetricAggregationType/AVERAGE (metric-aggregation-type {:item MetricAggregationType/AVERAGE} "test" :item)))
    (is (= MetricAggregationType/AVERAGE (metric-aggregation-type {:test/item MetricAggregationType/AVERAGE} "test" :item)))
    (is (= MetricAggregationType/MINIMUM (metric-aggregation-type {:item MetricAggregationType/MINIMUM} "test" :item)))
    (is (= MetricAggregationType/MINIMUM (metric-aggregation-type {:test/item MetricAggregationType/MINIMUM} "test" :item)))
    (is (= MetricAggregationType/MAXIMUM (metric-aggregation-type {:item :maximum} "test" :item)))
    (is (= MetricAggregationType/MAXIMUM (metric-aggregation-type {:test/item :maximum} "test" :item)))
    (is (= MetricAggregationType/AVERAGE (metric-aggregation-type {:item :average} "test" :item)))
    (is (= MetricAggregationType/AVERAGE (metric-aggregation-type {:test/item :average} "test" :item)))
    (is (= MetricAggregationType/MINIMUM (metric-aggregation-type {:item :minimum} "test" :item)))
    (is (= MetricAggregationType/MINIMUM (metric-aggregation-type {:test/item :minimum} "test" :item)))))


(deftest predefined-metric-test
  (testing "Testing enum function predefined-metric"
    (is (= PredefinedMetric/ALB_REQUEST_COUNT_PER_TARGET (predefined-metric {:item PredefinedMetric/ALB_REQUEST_COUNT_PER_TARGET} "test" :item)))
    (is (= PredefinedMetric/ALB_REQUEST_COUNT_PER_TARGET (predefined-metric {:test/item PredefinedMetric/ALB_REQUEST_COUNT_PER_TARGET} "test" :item)))
    (is (= PredefinedMetric/DYANMODB_WRITE_CAPACITY_UTILIZATION (predefined-metric {:item PredefinedMetric/DYANMODB_WRITE_CAPACITY_UTILIZATION} "test" :item)))
    (is (= PredefinedMetric/DYANMODB_WRITE_CAPACITY_UTILIZATION (predefined-metric {:test/item PredefinedMetric/DYANMODB_WRITE_CAPACITY_UTILIZATION} "test" :item)))
    (is (= PredefinedMetric/ECS_SERVICE_AVERAGE_MEMORY_UTILIZATION (predefined-metric {:item PredefinedMetric/ECS_SERVICE_AVERAGE_MEMORY_UTILIZATION} "test" :item)))
    (is (= PredefinedMetric/ECS_SERVICE_AVERAGE_MEMORY_UTILIZATION (predefined-metric {:test/item PredefinedMetric/ECS_SERVICE_AVERAGE_MEMORY_UTILIZATION} "test" :item)))
    (is (= PredefinedMetric/SAGEMAKER_VARIANT_PROVISIONED_CONCURRENCY_UTILIZATION (predefined-metric {:item PredefinedMetric/SAGEMAKER_VARIANT_PROVISIONED_CONCURRENCY_UTILIZATION} "test" :item)))
    (is (= PredefinedMetric/SAGEMAKER_VARIANT_PROVISIONED_CONCURRENCY_UTILIZATION (predefined-metric {:test/item PredefinedMetric/SAGEMAKER_VARIANT_PROVISIONED_CONCURRENCY_UTILIZATION} "test" :item)))
    (is (= PredefinedMetric/COMPREHEND_INFERENCE_UTILIZATION (predefined-metric {:item PredefinedMetric/COMPREHEND_INFERENCE_UTILIZATION} "test" :item)))
    (is (= PredefinedMetric/COMPREHEND_INFERENCE_UTILIZATION (predefined-metric {:test/item PredefinedMetric/COMPREHEND_INFERENCE_UTILIZATION} "test" :item)))
    (is (= PredefinedMetric/ECS_SERVICE_AVERAGE_CPU_UTILIZATION (predefined-metric {:item PredefinedMetric/ECS_SERVICE_AVERAGE_CPU_UTILIZATION} "test" :item)))
    (is (= PredefinedMetric/ECS_SERVICE_AVERAGE_CPU_UTILIZATION (predefined-metric {:test/item PredefinedMetric/ECS_SERVICE_AVERAGE_CPU_UTILIZATION} "test" :item)))
    (is (= PredefinedMetric/ELASTICACHE_DATABASE_CAPACITY_USAGE_COUNTED_FOR_EVICT_PERCENTAGE (predefined-metric {:item PredefinedMetric/ELASTICACHE_DATABASE_CAPACITY_USAGE_COUNTED_FOR_EVICT_PERCENTAGE} "test" :item)))
    (is (= PredefinedMetric/ELASTICACHE_DATABASE_CAPACITY_USAGE_COUNTED_FOR_EVICT_PERCENTAGE (predefined-metric {:test/item PredefinedMetric/ELASTICACHE_DATABASE_CAPACITY_USAGE_COUNTED_FOR_EVICT_PERCENTAGE} "test" :item)))
    (is (= PredefinedMetric/CASSANDRA_WRITE_CAPACITY_UTILIZATION (predefined-metric {:item PredefinedMetric/CASSANDRA_WRITE_CAPACITY_UTILIZATION} "test" :item)))
    (is (= PredefinedMetric/CASSANDRA_WRITE_CAPACITY_UTILIZATION (predefined-metric {:test/item PredefinedMetric/CASSANDRA_WRITE_CAPACITY_UTILIZATION} "test" :item)))
    (is (= PredefinedMetric/RDS_READER_AVERAGE_CPU_UTILIZATION (predefined-metric {:item PredefinedMetric/RDS_READER_AVERAGE_CPU_UTILIZATION} "test" :item)))
    (is (= PredefinedMetric/RDS_READER_AVERAGE_CPU_UTILIZATION (predefined-metric {:test/item PredefinedMetric/RDS_READER_AVERAGE_CPU_UTILIZATION} "test" :item)))
    (is (= PredefinedMetric/ELASTICACHE_DATABASE_MEMORY_USAGE_COUNTED_FOR_EVICT_PERCENTAGE (predefined-metric {:item PredefinedMetric/ELASTICACHE_DATABASE_MEMORY_USAGE_COUNTED_FOR_EVICT_PERCENTAGE} "test" :item)))
    (is (= PredefinedMetric/ELASTICACHE_DATABASE_MEMORY_USAGE_COUNTED_FOR_EVICT_PERCENTAGE (predefined-metric {:test/item PredefinedMetric/ELASTICACHE_DATABASE_MEMORY_USAGE_COUNTED_FOR_EVICT_PERCENTAGE} "test" :item)))
    (is (= PredefinedMetric/SAGEMAKER_VARIANT_INVOCATIONS_PER_INSTANCE (predefined-metric {:item PredefinedMetric/SAGEMAKER_VARIANT_INVOCATIONS_PER_INSTANCE} "test" :item)))
    (is (= PredefinedMetric/SAGEMAKER_VARIANT_INVOCATIONS_PER_INSTANCE (predefined-metric {:test/item PredefinedMetric/SAGEMAKER_VARIANT_INVOCATIONS_PER_INSTANCE} "test" :item)))
    (is (= PredefinedMetric/EC2_SPOT_FLEET_REQUEST_AVERAGE_CPU_UTILIZATION (predefined-metric {:item PredefinedMetric/EC2_SPOT_FLEET_REQUEST_AVERAGE_CPU_UTILIZATION} "test" :item)))
    (is (= PredefinedMetric/EC2_SPOT_FLEET_REQUEST_AVERAGE_CPU_UTILIZATION (predefined-metric {:test/item PredefinedMetric/EC2_SPOT_FLEET_REQUEST_AVERAGE_CPU_UTILIZATION} "test" :item)))
    (is (= PredefinedMetric/LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION (predefined-metric {:item PredefinedMetric/LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION} "test" :item)))
    (is (= PredefinedMetric/LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION (predefined-metric {:test/item PredefinedMetric/LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION} "test" :item)))
    (is (= PredefinedMetric/NEPTURE_READER_AVERAGE_CPU_UTILIZATION (predefined-metric {:item PredefinedMetric/NEPTURE_READER_AVERAGE_CPU_UTILIZATION} "test" :item)))
    (is (= PredefinedMetric/NEPTURE_READER_AVERAGE_CPU_UTILIZATION (predefined-metric {:test/item PredefinedMetric/NEPTURE_READER_AVERAGE_CPU_UTILIZATION} "test" :item)))
    (is (= PredefinedMetric/EC2_SPOT_FLEET_REQUEST_AVERAGE_NETWORK_OUT (predefined-metric {:item PredefinedMetric/EC2_SPOT_FLEET_REQUEST_AVERAGE_NETWORK_OUT} "test" :item)))
    (is (= PredefinedMetric/EC2_SPOT_FLEET_REQUEST_AVERAGE_NETWORK_OUT (predefined-metric {:test/item PredefinedMetric/EC2_SPOT_FLEET_REQUEST_AVERAGE_NETWORK_OUT} "test" :item)))
    (is (= PredefinedMetric/SAGEMAKER_INFERENCE_COMPONENT_INVOCATIONS_PER_COPY (predefined-metric {:item PredefinedMetric/SAGEMAKER_INFERENCE_COMPONENT_INVOCATIONS_PER_COPY} "test" :item)))
    (is (= PredefinedMetric/SAGEMAKER_INFERENCE_COMPONENT_INVOCATIONS_PER_COPY (predefined-metric {:test/item PredefinedMetric/SAGEMAKER_INFERENCE_COMPONENT_INVOCATIONS_PER_COPY} "test" :item)))
    (is (= PredefinedMetric/CASSANDRA_READ_CAPACITY_UTILIZATION (predefined-metric {:item PredefinedMetric/CASSANDRA_READ_CAPACITY_UTILIZATION} "test" :item)))
    (is (= PredefinedMetric/CASSANDRA_READ_CAPACITY_UTILIZATION (predefined-metric {:test/item PredefinedMetric/CASSANDRA_READ_CAPACITY_UTILIZATION} "test" :item)))
    (is (= PredefinedMetric/RDS_READER_AVERAGE_DATABASE_CONNECTIONS (predefined-metric {:item PredefinedMetric/RDS_READER_AVERAGE_DATABASE_CONNECTIONS} "test" :item)))
    (is (= PredefinedMetric/RDS_READER_AVERAGE_DATABASE_CONNECTIONS (predefined-metric {:test/item PredefinedMetric/RDS_READER_AVERAGE_DATABASE_CONNECTIONS} "test" :item)))
    (is (= PredefinedMetric/ELASTICACHE_REPLICA_ENGINE_CPU_UTILIZATION (predefined-metric {:item PredefinedMetric/ELASTICACHE_REPLICA_ENGINE_CPU_UTILIZATION} "test" :item)))
    (is (= PredefinedMetric/ELASTICACHE_REPLICA_ENGINE_CPU_UTILIZATION (predefined-metric {:test/item PredefinedMetric/ELASTICACHE_REPLICA_ENGINE_CPU_UTILIZATION} "test" :item)))
    (is (= PredefinedMetric/APPSTREAM_AVERAGE_CAPACITY_UTILIZATION (predefined-metric {:item PredefinedMetric/APPSTREAM_AVERAGE_CAPACITY_UTILIZATION} "test" :item)))
    (is (= PredefinedMetric/APPSTREAM_AVERAGE_CAPACITY_UTILIZATION (predefined-metric {:test/item PredefinedMetric/APPSTREAM_AVERAGE_CAPACITY_UTILIZATION} "test" :item)))
    (is (= PredefinedMetric/ELASTICACHE_PRIMARY_ENGINE_CPU_UTILIZATION (predefined-metric {:item PredefinedMetric/ELASTICACHE_PRIMARY_ENGINE_CPU_UTILIZATION} "test" :item)))
    (is (= PredefinedMetric/ELASTICACHE_PRIMARY_ENGINE_CPU_UTILIZATION (predefined-metric {:test/item PredefinedMetric/ELASTICACHE_PRIMARY_ENGINE_CPU_UTILIZATION} "test" :item)))
    (is (= PredefinedMetric/DYNAMODB_WRITE_CAPACITY_UTILIZATION (predefined-metric {:item PredefinedMetric/DYNAMODB_WRITE_CAPACITY_UTILIZATION} "test" :item)))
    (is (= PredefinedMetric/DYNAMODB_WRITE_CAPACITY_UTILIZATION (predefined-metric {:test/item PredefinedMetric/DYNAMODB_WRITE_CAPACITY_UTILIZATION} "test" :item)))
    (is (= PredefinedMetric/DYNAMODB_READ_CAPACITY_UTILIZATION (predefined-metric {:item PredefinedMetric/DYNAMODB_READ_CAPACITY_UTILIZATION} "test" :item)))
    (is (= PredefinedMetric/DYNAMODB_READ_CAPACITY_UTILIZATION (predefined-metric {:test/item PredefinedMetric/DYNAMODB_READ_CAPACITY_UTILIZATION} "test" :item)))
    (is (= PredefinedMetric/KAFKA_BROKER_STORAGE_UTILIZATION (predefined-metric {:item PredefinedMetric/KAFKA_BROKER_STORAGE_UTILIZATION} "test" :item)))
    (is (= PredefinedMetric/KAFKA_BROKER_STORAGE_UTILIZATION (predefined-metric {:test/item PredefinedMetric/KAFKA_BROKER_STORAGE_UTILIZATION} "test" :item)))
    (is (= PredefinedMetric/EC2_SPOT_FLEET_REQUEST_AVERAGE_NETWORK_IN (predefined-metric {:item PredefinedMetric/EC2_SPOT_FLEET_REQUEST_AVERAGE_NETWORK_IN} "test" :item)))
    (is (= PredefinedMetric/EC2_SPOT_FLEET_REQUEST_AVERAGE_NETWORK_IN (predefined-metric {:test/item PredefinedMetric/EC2_SPOT_FLEET_REQUEST_AVERAGE_NETWORK_IN} "test" :item)))
    (is (= PredefinedMetric/ALB_REQUEST_COUNT_PER_TARGET (predefined-metric {:item :alb-request-count-per-target} "test" :item)))
    (is (= PredefinedMetric/ALB_REQUEST_COUNT_PER_TARGET (predefined-metric {:test/item :alb-request-count-per-target} "test" :item)))
    (is (= PredefinedMetric/DYANMODB_WRITE_CAPACITY_UTILIZATION (predefined-metric {:item :dyanmodb-write-capacity-utilization} "test" :item)))
    (is (= PredefinedMetric/DYANMODB_WRITE_CAPACITY_UTILIZATION (predefined-metric {:test/item :dyanmodb-write-capacity-utilization} "test" :item)))
    (is (= PredefinedMetric/ECS_SERVICE_AVERAGE_MEMORY_UTILIZATION (predefined-metric {:item :ecs-service-average-memory-utilization} "test" :item)))
    (is (= PredefinedMetric/ECS_SERVICE_AVERAGE_MEMORY_UTILIZATION (predefined-metric {:test/item :ecs-service-average-memory-utilization} "test" :item)))
    (is (= PredefinedMetric/SAGEMAKER_VARIANT_PROVISIONED_CONCURRENCY_UTILIZATION (predefined-metric {:item :sagemaker-variant-provisioned-concurrency-utilization} "test" :item)))
    (is (= PredefinedMetric/SAGEMAKER_VARIANT_PROVISIONED_CONCURRENCY_UTILIZATION (predefined-metric {:test/item :sagemaker-variant-provisioned-concurrency-utilization} "test" :item)))
    (is (= PredefinedMetric/COMPREHEND_INFERENCE_UTILIZATION (predefined-metric {:item :comprehend-inference-utilization} "test" :item)))
    (is (= PredefinedMetric/COMPREHEND_INFERENCE_UTILIZATION (predefined-metric {:test/item :comprehend-inference-utilization} "test" :item)))
    (is (= PredefinedMetric/ECS_SERVICE_AVERAGE_CPU_UTILIZATION (predefined-metric {:item :ecs-service-average-cpu-utilization} "test" :item)))
    (is (= PredefinedMetric/ECS_SERVICE_AVERAGE_CPU_UTILIZATION (predefined-metric {:test/item :ecs-service-average-cpu-utilization} "test" :item)))
    (is (= PredefinedMetric/ELASTICACHE_DATABASE_CAPACITY_USAGE_COUNTED_FOR_EVICT_PERCENTAGE (predefined-metric {:item :elasticache-database-capacity-usage-counted-for-evict-percentage} "test" :item)))
    (is (= PredefinedMetric/ELASTICACHE_DATABASE_CAPACITY_USAGE_COUNTED_FOR_EVICT_PERCENTAGE (predefined-metric {:test/item :elasticache-database-capacity-usage-counted-for-evict-percentage} "test" :item)))
    (is (= PredefinedMetric/CASSANDRA_WRITE_CAPACITY_UTILIZATION (predefined-metric {:item :cassandra-write-capacity-utilization} "test" :item)))
    (is (= PredefinedMetric/CASSANDRA_WRITE_CAPACITY_UTILIZATION (predefined-metric {:test/item :cassandra-write-capacity-utilization} "test" :item)))
    (is (= PredefinedMetric/RDS_READER_AVERAGE_CPU_UTILIZATION (predefined-metric {:item :rds-reader-average-cpu-utilization} "test" :item)))
    (is (= PredefinedMetric/RDS_READER_AVERAGE_CPU_UTILIZATION (predefined-metric {:test/item :rds-reader-average-cpu-utilization} "test" :item)))
    (is (= PredefinedMetric/ELASTICACHE_DATABASE_MEMORY_USAGE_COUNTED_FOR_EVICT_PERCENTAGE (predefined-metric {:item :elasticache-database-memory-usage-counted-for-evict-percentage} "test" :item)))
    (is (= PredefinedMetric/ELASTICACHE_DATABASE_MEMORY_USAGE_COUNTED_FOR_EVICT_PERCENTAGE (predefined-metric {:test/item :elasticache-database-memory-usage-counted-for-evict-percentage} "test" :item)))
    (is (= PredefinedMetric/SAGEMAKER_VARIANT_INVOCATIONS_PER_INSTANCE (predefined-metric {:item :sagemaker-variant-invocations-per-instance} "test" :item)))
    (is (= PredefinedMetric/SAGEMAKER_VARIANT_INVOCATIONS_PER_INSTANCE (predefined-metric {:test/item :sagemaker-variant-invocations-per-instance} "test" :item)))
    (is (= PredefinedMetric/EC2_SPOT_FLEET_REQUEST_AVERAGE_CPU_UTILIZATION (predefined-metric {:item :ec2-spot-fleet-request-average-cpu-utilization} "test" :item)))
    (is (= PredefinedMetric/EC2_SPOT_FLEET_REQUEST_AVERAGE_CPU_UTILIZATION (predefined-metric {:test/item :ec2-spot-fleet-request-average-cpu-utilization} "test" :item)))
    (is (= PredefinedMetric/LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION (predefined-metric {:item :lambda-provisioned-concurrency-utilization} "test" :item)))
    (is (= PredefinedMetric/LAMBDA_PROVISIONED_CONCURRENCY_UTILIZATION (predefined-metric {:test/item :lambda-provisioned-concurrency-utilization} "test" :item)))
    (is (= PredefinedMetric/NEPTURE_READER_AVERAGE_CPU_UTILIZATION (predefined-metric {:item :nepture-reader-average-cpu-utilization} "test" :item)))
    (is (= PredefinedMetric/NEPTURE_READER_AVERAGE_CPU_UTILIZATION (predefined-metric {:test/item :nepture-reader-average-cpu-utilization} "test" :item)))
    (is (= PredefinedMetric/EC2_SPOT_FLEET_REQUEST_AVERAGE_NETWORK_OUT (predefined-metric {:item :ec2-spot-fleet-request-average-network-out} "test" :item)))
    (is (= PredefinedMetric/EC2_SPOT_FLEET_REQUEST_AVERAGE_NETWORK_OUT (predefined-metric {:test/item :ec2-spot-fleet-request-average-network-out} "test" :item)))
    (is (= PredefinedMetric/SAGEMAKER_INFERENCE_COMPONENT_INVOCATIONS_PER_COPY (predefined-metric {:item :sagemaker-inference-component-invocations-per-copy} "test" :item)))
    (is (= PredefinedMetric/SAGEMAKER_INFERENCE_COMPONENT_INVOCATIONS_PER_COPY (predefined-metric {:test/item :sagemaker-inference-component-invocations-per-copy} "test" :item)))
    (is (= PredefinedMetric/CASSANDRA_READ_CAPACITY_UTILIZATION (predefined-metric {:item :cassandra-read-capacity-utilization} "test" :item)))
    (is (= PredefinedMetric/CASSANDRA_READ_CAPACITY_UTILIZATION (predefined-metric {:test/item :cassandra-read-capacity-utilization} "test" :item)))
    (is (= PredefinedMetric/RDS_READER_AVERAGE_DATABASE_CONNECTIONS (predefined-metric {:item :rds-reader-average-database-connections} "test" :item)))
    (is (= PredefinedMetric/RDS_READER_AVERAGE_DATABASE_CONNECTIONS (predefined-metric {:test/item :rds-reader-average-database-connections} "test" :item)))
    (is (= PredefinedMetric/ELASTICACHE_REPLICA_ENGINE_CPU_UTILIZATION (predefined-metric {:item :elasticache-replica-engine-cpu-utilization} "test" :item)))
    (is (= PredefinedMetric/ELASTICACHE_REPLICA_ENGINE_CPU_UTILIZATION (predefined-metric {:test/item :elasticache-replica-engine-cpu-utilization} "test" :item)))
    (is (= PredefinedMetric/APPSTREAM_AVERAGE_CAPACITY_UTILIZATION (predefined-metric {:item :appstream-average-capacity-utilization} "test" :item)))
    (is (= PredefinedMetric/APPSTREAM_AVERAGE_CAPACITY_UTILIZATION (predefined-metric {:test/item :appstream-average-capacity-utilization} "test" :item)))
    (is (= PredefinedMetric/ELASTICACHE_PRIMARY_ENGINE_CPU_UTILIZATION (predefined-metric {:item :elasticache-primary-engine-cpu-utilization} "test" :item)))
    (is (= PredefinedMetric/ELASTICACHE_PRIMARY_ENGINE_CPU_UTILIZATION (predefined-metric {:test/item :elasticache-primary-engine-cpu-utilization} "test" :item)))
    (is (= PredefinedMetric/DYNAMODB_WRITE_CAPACITY_UTILIZATION (predefined-metric {:item :dynamodb-write-capacity-utilization} "test" :item)))
    (is (= PredefinedMetric/DYNAMODB_WRITE_CAPACITY_UTILIZATION (predefined-metric {:test/item :dynamodb-write-capacity-utilization} "test" :item)))
    (is (= PredefinedMetric/DYNAMODB_READ_CAPACITY_UTILIZATION (predefined-metric {:item :dynamodb-read-capacity-utilization} "test" :item)))
    (is (= PredefinedMetric/DYNAMODB_READ_CAPACITY_UTILIZATION (predefined-metric {:test/item :dynamodb-read-capacity-utilization} "test" :item)))
    (is (= PredefinedMetric/KAFKA_BROKER_STORAGE_UTILIZATION (predefined-metric {:item :kafka-broker-storage-utilization} "test" :item)))
    (is (= PredefinedMetric/KAFKA_BROKER_STORAGE_UTILIZATION (predefined-metric {:test/item :kafka-broker-storage-utilization} "test" :item)))
    (is (= PredefinedMetric/EC2_SPOT_FLEET_REQUEST_AVERAGE_NETWORK_IN (predefined-metric {:item :ec2-spot-fleet-request-average-network-in} "test" :item)))
    (is (= PredefinedMetric/EC2_SPOT_FLEET_REQUEST_AVERAGE_NETWORK_IN (predefined-metric {:test/item :ec2-spot-fleet-request-average-network-in} "test" :item)))))


(deftest service-namespace-test
  (testing "Testing enum function service-namespace"
    (is (= ServiceNamespace/NEPTUNE (service-namespace {:item ServiceNamespace/NEPTUNE} "test" :item)))
    (is (= ServiceNamespace/NEPTUNE (service-namespace {:test/item ServiceNamespace/NEPTUNE} "test" :item)))
    (is (= ServiceNamespace/ELASTIC_MAP_REDUCE (service-namespace {:item ServiceNamespace/ELASTIC_MAP_REDUCE} "test" :item)))
    (is (= ServiceNamespace/ELASTIC_MAP_REDUCE (service-namespace {:test/item ServiceNamespace/ELASTIC_MAP_REDUCE} "test" :item)))
    (is (= ServiceNamespace/RDS (service-namespace {:item ServiceNamespace/RDS} "test" :item)))
    (is (= ServiceNamespace/RDS (service-namespace {:test/item ServiceNamespace/RDS} "test" :item)))
    (is (= ServiceNamespace/EC2 (service-namespace {:item ServiceNamespace/EC2} "test" :item)))
    (is (= ServiceNamespace/EC2 (service-namespace {:test/item ServiceNamespace/EC2} "test" :item)))
    (is (= ServiceNamespace/ELASTICACHE (service-namespace {:item ServiceNamespace/ELASTICACHE} "test" :item)))
    (is (= ServiceNamespace/ELASTICACHE (service-namespace {:test/item ServiceNamespace/ELASTICACHE} "test" :item)))
    (is (= ServiceNamespace/DYNAMODB (service-namespace {:item ServiceNamespace/DYNAMODB} "test" :item)))
    (is (= ServiceNamespace/DYNAMODB (service-namespace {:test/item ServiceNamespace/DYNAMODB} "test" :item)))
    (is (= ServiceNamespace/KAFKA (service-namespace {:item ServiceNamespace/KAFKA} "test" :item)))
    (is (= ServiceNamespace/KAFKA (service-namespace {:test/item ServiceNamespace/KAFKA} "test" :item)))
    (is (= ServiceNamespace/COMPREHEND (service-namespace {:item ServiceNamespace/COMPREHEND} "test" :item)))
    (is (= ServiceNamespace/COMPREHEND (service-namespace {:test/item ServiceNamespace/COMPREHEND} "test" :item)))
    (is (= ServiceNamespace/APPSTREAM (service-namespace {:item ServiceNamespace/APPSTREAM} "test" :item)))
    (is (= ServiceNamespace/APPSTREAM (service-namespace {:test/item ServiceNamespace/APPSTREAM} "test" :item)))
    (is (= ServiceNamespace/SAGEMAKER (service-namespace {:item ServiceNamespace/SAGEMAKER} "test" :item)))
    (is (= ServiceNamespace/SAGEMAKER (service-namespace {:test/item ServiceNamespace/SAGEMAKER} "test" :item)))
    (is (= ServiceNamespace/ECS (service-namespace {:item ServiceNamespace/ECS} "test" :item)))
    (is (= ServiceNamespace/ECS (service-namespace {:test/item ServiceNamespace/ECS} "test" :item)))
    (is (= ServiceNamespace/LAMBDA (service-namespace {:item ServiceNamespace/LAMBDA} "test" :item)))
    (is (= ServiceNamespace/LAMBDA (service-namespace {:test/item ServiceNamespace/LAMBDA} "test" :item)))
    (is (= ServiceNamespace/CUSTOM_RESOURCE (service-namespace {:item ServiceNamespace/CUSTOM_RESOURCE} "test" :item)))
    (is (= ServiceNamespace/CUSTOM_RESOURCE (service-namespace {:test/item ServiceNamespace/CUSTOM_RESOURCE} "test" :item)))
    (is (= ServiceNamespace/NEPTUNE (service-namespace {:item :neptune} "test" :item)))
    (is (= ServiceNamespace/NEPTUNE (service-namespace {:test/item :neptune} "test" :item)))
    (is (= ServiceNamespace/ELASTIC_MAP_REDUCE (service-namespace {:item :elastic-map-reduce} "test" :item)))
    (is (= ServiceNamespace/ELASTIC_MAP_REDUCE (service-namespace {:test/item :elastic-map-reduce} "test" :item)))
    (is (= ServiceNamespace/RDS (service-namespace {:item :rds} "test" :item)))
    (is (= ServiceNamespace/RDS (service-namespace {:test/item :rds} "test" :item)))
    (is (= ServiceNamespace/EC2 (service-namespace {:item :ec2} "test" :item)))
    (is (= ServiceNamespace/EC2 (service-namespace {:test/item :ec2} "test" :item)))
    (is (= ServiceNamespace/ELASTICACHE (service-namespace {:item :elasticache} "test" :item)))
    (is (= ServiceNamespace/ELASTICACHE (service-namespace {:test/item :elasticache} "test" :item)))
    (is (= ServiceNamespace/DYNAMODB (service-namespace {:item :dynamodb} "test" :item)))
    (is (= ServiceNamespace/DYNAMODB (service-namespace {:test/item :dynamodb} "test" :item)))
    (is (= ServiceNamespace/KAFKA (service-namespace {:item :kafka} "test" :item)))
    (is (= ServiceNamespace/KAFKA (service-namespace {:test/item :kafka} "test" :item)))
    (is (= ServiceNamespace/COMPREHEND (service-namespace {:item :comprehend} "test" :item)))
    (is (= ServiceNamespace/COMPREHEND (service-namespace {:test/item :comprehend} "test" :item)))
    (is (= ServiceNamespace/APPSTREAM (service-namespace {:item :appstream} "test" :item)))
    (is (= ServiceNamespace/APPSTREAM (service-namespace {:test/item :appstream} "test" :item)))
    (is (= ServiceNamespace/SAGEMAKER (service-namespace {:item :sagemaker} "test" :item)))
    (is (= ServiceNamespace/SAGEMAKER (service-namespace {:test/item :sagemaker} "test" :item)))
    (is (= ServiceNamespace/ECS (service-namespace {:item :ecs} "test" :item)))
    (is (= ServiceNamespace/ECS (service-namespace {:test/item :ecs} "test" :item)))
    (is (= ServiceNamespace/LAMBDA (service-namespace {:item :lambda} "test" :item)))
    (is (= ServiceNamespace/LAMBDA (service-namespace {:test/item :lambda} "test" :item)))
    (is (= ServiceNamespace/CUSTOM_RESOURCE (service-namespace {:item :custom-resource} "test" :item)))
    (is (= ServiceNamespace/CUSTOM_RESOURCE (service-namespace {:test/item :custom-resource} "test" :item)))))